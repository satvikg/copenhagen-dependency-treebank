#summary The DTAG query language

= Introduction =

DTAG has a rich query language based on first-order logic. This page describes the detailed syntax of the query language, provides examples of queries that can be performed with DTAG, and briefly describes how the query system works internally. 


<wiki:toc max_depth="3"/>

= Query language syntax =

   * *{{{<node1> <relation-constraint> <node2>}}}*: the first node is connected to the second via an in-edge whose relation name matches the given relation constraint. The relation constraint is either an atomic relation name (quoted or unquoted), a [http://perldoc.perl.org/perlre.html regular expression in Perl] of the form {{{/<regexp>/}}}, or an isa-constraint of the form {{{isa(<super>)}}} that matches relations which equals or are dominated by the relation {{{<super>}}} in the relation hierarchy.
      * {{{$X "subj" $Y}}}: find all edges into $X from $Y with atomic label "subj".
      * {{{$X coref $Y}}}: find all edges into $X from $Y with atomic label "coref".
      * {{{$X /obj/ $Y}}}: find all edges into $X from $Y whose name contains "obj".
      * {{{$X /^(subj|dobj)$/ $Y}}}: find all edges into $X from $Y whose name matches either "subj" or "dobj".
      * {{{$X isa(SYNADJ) $Y}}}: find all syntactic adjunct edges into $X from $Y. 

= Example queries =

= Find and replace =

= Working with corpora =

= Querying multi-file graphs =